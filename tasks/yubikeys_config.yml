---
- name: Check if 'root' is not in yubikey_lognames
  fail:
    msg: "Setting sshkey and yubikeyId for 'root' is not allowed"
  when: "'root' in yubikey_lognames"

- name: put users into /etc/yubico/authorized_yubikeys
  lineinfile:
    path: /etc/yubico/authorized_yubikeys
    regexp: "^{{ item }}:"
    line: "{{ item }}:{{ yubikey_users[item].yubikeys | join(':') }}"
  loop: "{{ yubikey_lognames }}"

- name: create users
  user:
    name: "{{ item }}"
    comment: "{{ yubikey_users[item].name }}"
    shell: /bin/bash
  loop: "{{ yubikey_lognames }}"

- name: ensure groups
  group:
    name: "{{ item }}"
  loop: "{{ yubikey_lognames }}"

- name: ensure users in groups
  user:
    name: "{{ item }}"
    group: "{{ item }}"
  loop: "{{ yubikey_lognames }}"

- name: create .ssh dirs
  file:
    path: "/home/{{ item }}/.ssh"
    owner: "{{ item }}"
    group: "{{ item }}"
    state: directory
    mode: 0700
  loop: "{{ yubikey_lognames }}"

- name: Create ssh keys in .ssh/authorized_keys
  blockinfile:
    path: "/home/{{ item }}/.ssh/authorized_keys"
    create: yes
    owner: "{{ item }}"
    group: "{{ item }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      {% for key in yubikey_users[item].sshkeys -%}
        {{ key }}
      {% endfor %}
  loop: "{{ yubikey_lognames }}"

- name: Add users to group sudo
  user:
    name: "{{ item }}"
    groups: sudo
    append: yes
  loop: "{{ sudo_root_lognames }}"

- name: "Allowing 'sudo su - {{ other_sudo_user }}'"
  lineinfile:
    path: "/etc/sudoers"
    line: "{{ item }} ALL=(root) /bin/su - {{ other_sudo_user }}"
  loop: "{{ sudo_other_lognames }}"